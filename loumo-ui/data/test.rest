@host = https://loumoapi.krestdev.com
# @host = http://192.168.0.103:5000
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTc1MDQwNTE3MiwiZXhwIjoxNzUwNDkxNTcyfQ.b0adqlbb_UEytXz-tmw96oK2LwP1Ko4YHY8QN6IqME4
### Login user by ID
post {{host}}/api/users/login
Content-Type: application/json

{
  "email": "etarcos1@gmail.com",
  "password": "Etarcos123"
}

# {
#   "email": "john@example.com",
#   "password": "password123"
# }

### Get all users
GET {{host}}/api/users/?roleD=true&addressD=true&logD=true&notifD=true
Authorization: Bearer {{token}}

### Get a single user by ID
GET {{host}}/api/users/1

### Create a new user
POST {{host}}/api/users/
Content-Type: application/json

{
  "name": "John Doe",
  "email": "etarcos3@gmail.com",
  "password": "Etarcos123",
  "tel":"656954474"
}

### Update a user by ID
PUT {{host}}/api/users/18
Content-Type: application/json

{
  "name": "Etarcos",
  "verified": true
}

### assign role to a user by ID
PUT {{host}}/api/users/role/15
Content-Type: application/json

{
  "roleId": 2
}

### Delete a user by ID
DELETE {{host}}/api/users/1


##################### roles ###########################


### Get all roles
GET {{host}}/api/roles/
Authorization: Bearer {{token}}

### Get a single role by ID
GET {{host}}/api/roles/1

### Create a new role
POST {{host}}/api/roles/
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "name": "delivery"
}

### Update a role by ID
PUT {{host}}/api/roles/2
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "name": "superadmin",
  "ids": [1,2,3,4,5,6,7,8]
}

### Delete a role by ID
DELETE {{host}}/api/roles/{roleId}
Authorization: Bearer {{token}}

##################### permissions ###########################

### Get all permissions
GET {{host}}/api/permissions/

### Get a single permission by ID
GET {{host}}/api/permissions/1

### Create a new permission
POST {{host}}/api/permissions/
Content-Type: application/json

{
  "action": "read:role"
}

### Update a permission by ID
PUT {{host}}/api/permissions/1
Content-Type: application/json

{
  "action": "read:user"
}

### Delete a permission by ID
DELETE {{host}}/api/permissions/1


##################### Address ###########################


### Get all addresses
GET {{host}}/api/address/

### Get a single address by ID (not ecessary)
GET {{host}}/api/address/1

### Create a new address
POST {{host}}/api/address/
Content-Type: application/json

{
  "local": "Home",
  "street": "Primary residence",
  "zoneId": 1
}

### Update an address by ID
PUT {{host}}/api/address/2
Content-Type: application/json

{
  "name": "Work Home",
  "description": "Office location",
  "published": false,
  "zoneId": 2
}

### Delete an address by ID
DELETE {{host}}/api/address/1


########### Zone ########################


### Get all zones
GET {{host}}/api/zones/

### Get a single zone by ID
GET {{host}}/api/zones/1

### Create a new zone
POST {{host}}/api/zones/
Content-Type: application/json

{
  "name": "Zone D",
  "price": 2500,
  "description": "Done description",
  "status": "active"
}

### Update a zone by ID
PUT {{host}}/api/zones/4
Content-Type: application/json

{
  "name": "Zone D",
  "price": 5000,
  "addressIds":[3]
}

### Delete a zone by ID
DELETE {{host}}/api/zones/1


################ Logs ###################


### Get all logs
GET {{host}}/api/logs/

### Get a single log by ID
GET {{host}}/api/logs/1

### Create a new log
POST {{host}}/api/logs/
Content-Type: application/json

{
  "action": "USER_LOGIN",
  "description": "User logged in",
  "userId": 1
}

### Update a log by ID
PUT {{host}}/api/logs/1
Content-Type: application/json

{
  "action": "USER_LOGOUT",
  "description": "User logged out"
}

### Delete a log by ID
DELETE {{host}}/api/logs/1


################ notifications ##################


### Get all notifications
GET {{host}}/api/notifications/

### Get a single notification by ID
GET {{host}}/api/notifications/1

### Create a new notification
POST {{host}}/api/notifications/
Content-Type: application/json

{
  "action": "USER_REGISTERED",
  "description": "A new user has registered",
  "userId": 1
}

### Update a notification by ID
PUT {{host}}/api/notifications/1
Content-Type: application/json

{
  "action": "USER_UPDATED",
  "description": "User profile updated"
}

### Delete a notification by ID
DELETE {{host}}/api/notifications/1


############### Category #######################


### Get all categories
GET {{host}}/api/categories/

### Get a single category by ID
GET {{host}}/api/categories/1

### Create a new category
POST {{host}}/api/categories/
Content-Type: application/json

{
  "name": "Electronics",
  "weight": 10,
  "status": true
}

### Update a category by ID
PUT {{host}}/api/categories/1
Content-Type: application/json

{
  "name": "Home Appliances",
  "weight": 20,
  "status": false
}

### Delete a category by ID
DELETE {{host}}/api/categories/1


############### Product #######################


### Get all products
GET {{host}}/api/products/

### Get a single product by ID
GET {{host}}/api/products/1

### Create a new product
POST {{host}}/api/products/
Content-Type: application/json

{
  "name": "iPhone 15",
  "weight": 200,
  "status": true,
  "categoryId": 1
}

### Update a product by ID
PUT {{host}}/api/products/23
Content-Type: application/json

  # "name": "iPhone 15 Pro",
{
  "categoryId": 5
}

  # "weight": 210,
  # "status": true,
  # "categoryId": 1
### Delete a product by ID
DELETE {{host}}/api/products/1


############### Product Variant #######################


### Get all product variants
GET {{host}}/api/productvariants/

### Get a single product variant by ID
GET {{host}}/api/productvariants/1

### Create a new product variant
POST {{host}}/api/productvariants/
Content-Type: application/json

{
  "name": "256GB",
  "weight": 215,
  "status": true,
  "productId": 1
}

### Update a product variant by ID
PUT {{host}}/api/productvariants/3
Content-Type: application/json

{
  "name": "128GB",
  "weight": 220,
  "status": true,
  "productId": 1
}

### Delete a product variant by ID
DELETE {{host}}/api/productvariants/1


############### Shop #######################


### Get all shops
GET {{host}}/api/shops/

### Get a single shop by ID
GET {{host}}/api/shops/1

### Create a new shop
POST {{host}}/api/shops/
Content-Type: application/json

{
  "name": "Main Street Shop",
  "addressId": 2
}

### Update a shop by ID
PUT {{host}}/api/shops/1
Content-Type: application/json

{
  "name": "Downtown Shop",
  "addressId": 2
}

### Delete a shop by ID
DELETE {{host}}/api/shops/1


############### Order #######################


### Get all orders
GET {{host}}/api/orders/

### Get a single order by ID
GET {{host}}/api/orders/1

### Create a new order
POST {{host}}/api/orders/
Content-Type: application/json

{
  "note": "Please deliver between 9am-12pm",
  "addressId": 9,
  "userId": 1,
  "weight": 10,
  "total": 5000,
  "deliveryFee": 500
}

### Update an order by ID
PUT {{host}}/api/orders/1
Content-Type: application/json

{
  "note": "Leave at the front desk",
  "addressId": 2,
  "userId": 1
}

### Delete an order by ID
DELETE {{host}}/api/orders/1


############### Payment #######################


### Get all payments
GET {{host}}/api/payments/

### Get a single payment by ID
GET {{host}}/api/payments/16

### Create a new payment
POST {{host}}/api/payments/
Content-Type: application/json

{
  "name": "Credit Card",
  "status": "PENDING",
  "ref": "PAY123456",
  "tel": "237657071178",
  "method": "ORANGE_CMR",
  "total": 250000,
  "orderId": 1
}

### Update a payment by ID
PUT {{host}}/api/payments/1
Content-Type: application/json

{
  "name": "Debit Card",
  "status": "pending",
  "ref": "PAY654321",
  "orderId": 1
}

### Delete a payment by ID
DELETE {{host}}/api/payments/16


############### Agent #######################


### Get all agents
GET {{host}}/api/agents/

### Get a single agent by ID
GET {{host}}/api/agents/1

### Create a new agent
POST {{host}}/api/agents/
Content-Type: application/json

{
  "code": "AGENT001",
  "userId": 2
}

### Update an agent by ID
PUT {{host}}/api/agents/1
Content-Type: application/json

{
  "status": "active"
}

#   "code": "AGENT002",
#   "userId": 2,
### Delete an agent by ID
DELETE {{host}}/api/agents/1


############### Order Item #######################


### Get all order items
GET {{host}}/api/orderitems/

### Get a single order item by ID
GET {{host}}/api/orderitems/1

### Create a new order item
POST {{host}}/api/orderitems/
Content-Type: application/json

{
  "note": "Handle with care",
  "orderId": 1
}

### Update an order item by ID
PUT {{host}}/api/orderitems/1
Content-Type: application/json

{
  "note": "Leave at the back door"
}

  # "orderId": 1
  # "deliveryId": 1
### Delete an order item by ID
DELETE {{host}}/api/orderitems/1


############### Delivery #######################


### Get all deliveries
GET {{host}}/api/deliveries/

### Get a single delivery by ID
GET {{host}}/api/deliveries/1

### Create a new delivery
POST {{host}}/api/deliveries/
Content-Type: application/json

{
  "status": "pending",
  "orderId": 1
}

### Update a delivery by ID
PUT {{host}}/api/deliveries/1
Content-Type: application/json

{
  "status": "completed",
  "agentId": 1
}

### Delete a delivery by ID
DELETE {{host}}/api/deliveries/1


############### Stock #######################


### Get all stocks
GET {{host}}/api/stocks/

### Get a single stock by ID
GET {{host}}/api/stocks/1

### Create a new stock
POST {{host}}/api/stocks/
Content-Type: application/json

{
  "quantity": 100,
  "productVariantId": 12,
  "shopId": 6
}

### Update a stock by ID
PUT {{host}}/api/stocks/1
Content-Type: application/json

{
  "quantity": 150,
  "promotionId": 1
}

### Delete a stock by ID
DELETE {{host}}/api/stocks/1


############### Promotion #######################


### Get all promotions
GET {{host}}/api/promotions/

### Get a single promotion by ID
GET {{host}}/api/promotions/2

### Create a new promotion
POST {{host}}/api/promotions/
Content-Type: application/json

{
  "code": "SUMMER2024",
  "percentage": 20,
  "expireAt": "2025-12-31T23:59:59.000Z"
}

### Update a promotion by ID
PUT {{host}}/api/promotions/1
Content-Type: application/json

{
  "code": "WINTER2024",
  "percentage": 25,
  "expireAt": "2025-12-31T23:59:59.000Z"
}

### Delete a promotion by ID
DELETE {{host}}/api/promotions/1

############### FAQ #######################

### Get all FAQs
GET {{host}}/api/faqs/

### Get a single FAQ by ID
GET {{host}}/api/faqs/1

### Create a new FAQ
POST {{host}}/api/faqs/
Content-Type: application/json

{
  "question": "How do I reset my password?",
  "answer": "Click on 'Forgot password' at login and follow the instructions.",
  "topicId": 4
}

### Update a FAQ by ID
PUT {{host}}/api/faqs/1
Content-Type: application/json

{
  "question": "How can I change my password?",
  "answer": "Go to your profile settings and select 'Change password'.",
  "topicId": 1
}

### Delete a FAQ by ID
DELETE {{host}}/api/faqs/8

############### Topic #######################

### Get all topics
GET {{host}}/api/topics/

### Get a single topic by ID
GET {{host}}/api/topics/1

### Create a new topic
POST {{host}}/api/topics/
Content-Type: application/json

{
  "name": "Compte & Support"
}

### Update a topic by ID
PUT {{host}}/api/topics/1
Content-Type: application/json

{
  "name": "User Account"
}

### Delete a topic by ID
DELETE {{host}}/api/topics/1
